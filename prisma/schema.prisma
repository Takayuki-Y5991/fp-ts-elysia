// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}


// ... (Other generator, datasource definitions) 

model Project {
  id        String   @id @default(cuid())
  title     String
  boards    Board[] 
}

model Board {
  id        String   @id @default(cuid())
  title     String
  stories   Story[] // Renamed from Column
  project   Project  @relation(fields: [projectId], references: [id])
  projectId String 
}

model Story { // Formerly Column
  id        String   @id @default(cuid())
  title     String
  order     Int      @default(0) // To maintain story ordering
  board     Board    @relation(fields: [boardId], references: [id])
  boardId   String
  tasks     Task[]
}

model Task {
  id          String    @id @default(cuid())
  title       String
  description String?
  priority    Priority  @default(LOW)
  story      Story    @relation(fields: [storyId], references: [id]) // Renamed from column
  storyId    String   // Renamed from columnId
  events      TaskEvent[]
  dependencies TaskDependency[] @relation(name: "TaskDependencies") // Customized name
  dependents  TaskDependency[] @relation(name: "TaskDependents")
}

enum Priority {
  LOW
  MEDIUM
  HIGH
}

model TaskEvent {
  id        String    @id @default(cuid())
  type      TaskEventType
  taskId    String
  data      Json?   
  task      Task      @relation(fields: [taskId], references: [id])
  storyId   String   // Renamed from columnId
  timestamp DateTime  @default(now())
}

enum TaskEventType {
  CREATED
  MOVED
  DESCRIPTION_CHANGED 
  PRIORITY_CHANGED
  STARTED 
  COMPLETED 
  REOPENED
  DEADLINE_MISSED
}

model TaskDependency {
  id          String   @id @default(cuid())
  taskId      String
  dependsOn   String
    task        Task   @relation("TaskDependencies", fields: [taskId], references: [id])
  dependency  Task   @relation("TaskDependents", fields: [dependsOn], references: [id])
}


model Account {
  id String @id @default(uuid())
  name String
  email String @unique
  password String
}